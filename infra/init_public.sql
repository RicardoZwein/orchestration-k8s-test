CREATE SCHEMA public;

-- 2. Create USERS table
CREATE TABLE public.users (
  id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email       VARCHAR(255) NOT NULL UNIQUE,
  created_at  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  last_login  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_active   SMALLINT DEFAULT 1  -- use SMALLINT(BOOLEAN) on DB2
);

-- 3. Create CUSTOMER_TRANSACTIONS table
CREATE TABLE public.customer_transactions (
  transaction_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_id      INTEGER NOT NULL REFERENCES public.users(id),
  amount           DECIMAL(12,2) NOT NULL,
  transaction_date DATE     NOT NULL,
  category         VARCHAR(50)
);

-- 4. Seed USERS with 5 sample rows
INSERT INTO public.users (email, created_at, last_login, is_active) VALUES
  ('alice@example.com',   CURRENT_TIMESTAMP - 30 DAYS, CURRENT_TIMESTAMP - 1 DAYS, 1),
  ('bob@example.com',     CURRENT_TIMESTAMP - 60 DAYS, CURRENT_TIMESTAMP - 10 DAYS, 1),
  ('carol@example.com',   CURRENT_TIMESTAMP - 90 DAYS, CURRENT_TIMESTAMP - 20 DAYS, 0),
  ('dave@example.com',    CURRENT_TIMESTAMP - 15 DAYS, CURRENT_TIMESTAMP - 2 DAYS, 1),
  ('eve@example.com',     CURRENT_TIMESTAMP - 120 DAYS, CURRENT_TIMESTAMP - 30 DAYS, 1);

-- 5. Seed CUSTOMER_TRANSACTIONS with 10 sample rows
BEGIN
  DECLARE i INT DEFAULT 1;
  DECLARE uid INT;
  WHILE i <= 10 DO
    SET uid = INT(RAND() * 5) + 1;                    -- random user 1â€“5
    INSERT INTO public.customer_transactions
      (customer_id, amount, transaction_date, category)
    VALUES
      (
        uid,
        DECIMAL(ROUND(RAND() * 1000, 2),12,2),         -- random amount up to 1000
        CURRENT DATE - INT(RAND() * 30) DAYS,          -- within last 30 days
        CASE                                            -- random category
          WHEN RAND() < 0.5 THEN 'deposit'
          ELSE 'withdrawal'
        END
      );
    SET i = i + 1;
  END WHILE;
END